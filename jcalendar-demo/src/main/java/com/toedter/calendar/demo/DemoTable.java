/*
 *  DemoTable.java  - A table to demo JDateChooser cell editors.
  *  Copyright (C) 2006 Kai Toedter
 *  kai@toedter.com
 *  www.toedter.com
 *
 *  This program is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public License
 *  as published by the Free Software Foundation; either version 2
 *  of the License, or (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */
package com.toedter.calendar.demo;

import com.toedter.calendar.JDateChooserCellEditor;

import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.AbstractTableModel;
import java.awt.Dimension;
import java.awt.GridLayout;
import java.util.Date;

/**
 * A demonstration table with JDateChooserCellEditors.
 *
 * @author Kai Toedter
 * @author Ruslan Lopez
 * @version $LastChangedRevision: 86 $
 * @version $LastChangedDate: 2019-11-21 23:45:52 +0200 (Fr, 28 Apr 2006) $
 */
public class DemoTable extends JPanel {

    private static final long serialVersionUID = -2823838920746867592L;

    /**
     * Creates new form DemoTable
     */
    public DemoTable() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        JScrollPane scrollPane = new JScrollPane();
        JTable table = new JTable();
        table.setPreferredScrollableViewportSize(new Dimension(180, 32));
        table.setDefaultEditor(Date.class, new JDateChooserCellEditor());

        setName("DemoTable"); // NOI18N
        setLayout(new GridLayout());

        table.setModel(new DemoTableModel());
        scrollPane.setViewportView(table);

        add(scrollPane);
    }// </editor-fold>//GEN-END:initComponents

    class DemoTableModel extends AbstractTableModel {

        private static final long serialVersionUID = 3283465559187131559L;

        private String[] columnNames = {"Empty Date", "Date set"};

        private Object[][] data = {
            {null, new Date()},
            {null, new Date()}
        };

        @Override
        public int getColumnCount() {
            return columnNames.length;
        }

        @Override
        public int getRowCount() {
            return data.length;
        }

        @Override
        public String getColumnName(int col) {
            return columnNames[col];
        }

        @Override
        public Object getValueAt(int row, int col) {
            return data[row][col];
        }

        /*
		 * JTable uses this method to determine the default renderer/ editor for
		 * each cell. If we didn't implement this method, then the last column
		 * would contain text ("true"/"false"), rather than a check box.
         */
        @Override
        public Class getColumnClass(int c) {
            return getValueAt(0, 1).getClass();
        }

        /*
		 * Don't need to implement this method unless your table's editable.
         */
        @Override
        public boolean isCellEditable(int row, int col) {
            return true;
        }

        /*
		 * Don't need to implement this method unless your table's data can
		 * change.
         */
        @Override
        public void setValueAt(Object value, int row, int col) {
            data[row][col] = value;
            fireTableCellUpdated(row, col);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
